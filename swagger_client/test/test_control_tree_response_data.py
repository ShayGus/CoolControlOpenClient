# coding: utf-8

"""
    OpenClientCoolAutomationAPI

    Cool platform REST API

    The version of the OpenAPI document: 2.0.1
    Contact: none@gmail.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cool_open_client.client.models.control_tree_response_data import ControlTreeResponseData

class TestControlTreeResponseData(unittest.TestCase):
    """ControlTreeResponseData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ControlTreeResponseData:
        """Test ControlTreeResponseData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ControlTreeResponseData`
        """
        model = ControlTreeResponseData()
        if include_optional:
            return ControlTreeResponseData(
                customers = cool_open_client.client.models.control_tree_response_data_customers.controlTreeResponseData_customers(
                    customer_id = cool_open_client.client.models.control_tree_response_data_customers_customer_id.controlTreeResponseData_customers_customer_id(
                        name = '', 
                        id = '', 
                        role = '', 
                        sites = cool_open_client.client.models.control_tree_response_data_customers_customer_id_sites.controlTreeResponseData_customers_customer_id_sites(
                            site_id = cool_open_client.client.models.control_tree_response_data_customers_customer_id_sites_site_id.controlTreeResponseData_customers_customer_id_sites_site_id(
                                name = '', 
                                id = '', 
                                role = '', 
                                devices = [
                                    56
                                    ], 
                                zones = [
                                    56
                                    ], 
                                systems = [
                                    56
                                    ], ), ), ), )
            )
        else:
            return ControlTreeResponseData(
        )
        """

    def testControlTreeResponseData(self):
        """Test ControlTreeResponseData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
